2025-07-20 04:56:46 +0000 - dagster - DEBUG - __ASSET_JOB - 0c77d034-3619-47d9-ac52-878c9b1d2c08 - 2027 - LOGS_CAPTURED - Started capturing logs in process (pid: 2027).
2025-07-20 04:56:46 +0000 - dagster - DEBUG - __ASSET_JOB - 0c77d034-3619-47d9-ac52-878c9b1d2c08 - 2027 - transform_events_data - STEP_START - Started execution of step "transform_events_data".
2025-07-20 04:56:58 +0000 - dagster - INFO - __ASSET_JOB - 0c77d034-3619-47d9-ac52-878c9b1d2c08 - transform_events_data - Full Load: False
2025-07-20 04:56:58 +0000 - dagster - ERROR - __ASSET_JOB - 0c77d034-3619-47d9-ac52-878c9b1d2c08 - 2027 - transform_events_data - STEP_FAILURE - Execution of step "transform_events_data" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "transform_events_data"::

ValueError: time data "created_ts" doesn't match format "%Y-%m-%d %H:%M:%S.%f", at position 60. You might want to try:
    - passing `format` if your strings have a consistent format;
    - passing `format='ISO8601'` if your strings are all ISO8601 but not necessarily in exactly the same format;
    - passing `format='mixed'`, and the format will be inferred for each element individually. You might want to use `dayfirst` alongside this.

Stack Trace:
  File "/usr/local/lib/python3.11/site-packages/dagster/_core/execution/plan/utils.py", line 57, in op_execution_error_boundary
    yield
  File "/usr/local/lib/python3.11/site-packages/dagster/_utils/__init__.py", line 392, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 137, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 117, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
                                                                    ^^^^^^^^^^^^^^^^^^
  File "/app/src/transformation/fact_assets.py", line 23, in transform_events_data
    df['created_ts'] = pd.to_datetime (df['created_ts'])
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pandas/core/tools/datetimes.py", line 1072, in to_datetime
    values = convert_listlike(arg._values, format)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pandas/core/tools/datetimes.py", line 435, in _convert_listlike_datetimes
    return _array_strptime_with_fallback(arg, name, utc, format, exact, errors)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pandas/core/tools/datetimes.py", line 469, in _array_strptime_with_fallback
    result, tz_out = array_strptime(arg, fmt, exact=exact, errors=errors, utc=utc)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/tslibs/strptime.pyx", line 501, in pandas._libs.tslibs.strptime.array_strptime
  File "pandas/_libs/tslibs/strptime.pyx", line 451, in pandas._libs.tslibs.strptime.array_strptime
  File "pandas/_libs/tslibs/strptime.pyx", line 583, in pandas._libs.tslibs.strptime._parse_with_format

